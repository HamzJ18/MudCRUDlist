@page "/user"

@using System.Net.Http.Json
@using MudCRUDlist.Shared
@using MudCRUDlist.Shared.Models
@using MudCRUDlist.Client.Services.Interface
@inject MudBlazor.ISnackbar snackBar
@inject HttpClient _httpClient

<MudTable Items="@items" Dense="@dense" Hover="@hover"
          Bordered="@bordered" Striped="@striped" SortLabel="Sort By"
          Filter="new Func<UserTable,bool>(FilterFunc1)" @bind-SelectedItem="selectedItem1">
    <ToolBarContent>
        <MudText Typo="Typo.h6">User List</MudText>
        <MudSpacer />
        <MudTextField @bind-Value="searchString1" Placeholder="Search"
                      Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search"
                      IconSize="Size.Small" Class="mt-0"></MudTextField>
    </ToolBarContent>
    <HeaderContent>
        <MudTh>
            <MudTableSortLabel SortBy="new Func<UserTable, object>(x=>x.UserId)">UserID</MudTableSortLabel>
        </MudTh>
        <MudTh>
            <MudTableSortLabel SortBy="new Func<UserTable, object>(x=>x.PersonId)">Person  ID</MudTableSortLabel>
        </MudTh>
        <MudTh><MudTableSortLabel 
            InitialDirection="SortDirection.Ascending"
            SortBy="new Func<UserTable, object>(x=>x.FirstName)">First Name</MudTableSortLabel>
        </MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<UserTable, object>(x=>x.LastName)">Last Name</MudTableSortLabel></MudTh>
    </HeaderContent>

    <RowTemplate>
        <MudTd DataLabel="UserId">@context.UserId</MudTd>
        <MudTd DataLabel="PersonID">@context.PersonId</MudTd>
        <MudTd DataLabel="FirstName">@context.FirstName</MudTd>
        <MudTd DataLabel="LastName">@context.LastName</MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager />
    </PagerContent>
</MudTable>

<div class="d-flex flex-wrap mt-4">
    <MudSwitch @bind-Checked="@hover" Color="Color.Primary">Hover</MudSwitch>
    <MudSwitch @bind-Checked="@dense" Color="Color.Secondary">Dense</MudSwitch>
    <MudSwitch @bind-Checked="@striped" Color="Color.Tertiary">Striped</MudSwitch>
    <MudSwitch @bind-Checked="@bordered" Color="Color.Warning">Bordered</MudSwitch>
    <MudSpacer />
    <div style="min-width:200px;">
        <MudText Inline="true"
                 Class="align-self-center">Selected1: @selectedItem1?.UserId</MudText>
    </div>
</div>

@code {
    private bool dense = false;
    private bool hover = true;
    private bool striped = false;
    private bool bordered = true;
    private string searchString1 = "";
    private UserTable selectedItem1 = null;
    private HashSet<UserTable> selectedItems = new HashSet<UserTable>();
    [Inject]
    public IUserTableService usertableservice { get; set; }
    private List<UserTable>? items = new List<UserTable>();


    protected async Task clickdb()
    {
        var item = await usertableservice.GetUsers();
        items = item.ToList();
        StateHasChanged();
    }

    protected override async Task OnInitializedAsync()
    {
        await clickdb();

    }
    private bool FilterFunc1(UserTable entity) => FilterFunc(entity, searchString1);

    private bool FilterFunc(UserTable entity, string searchString)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (entity.UserId.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;        
        if ($"{entity.UserId} {entity.PersonId} {entity.FirstName} {entity.LastName}".Contains(searchString))
            return true;
        return false;
    }

}